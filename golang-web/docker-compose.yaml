version: "3.4"
services:

  example_proxy:
    container_name: example_proxy
    image: example_proxy
    build:
      context: ./nginx
      dockerfile: dockerfile
      target: production
      args:
        - EXAMPLE_API_PORT=${EXAMPLE_API_PORT}
    ports:
      - "443:443"
      - "80:80"
    environment:
      - EXAMPLE_API_PORT=${EXAMPLE_API_PORT}
    expose:
      - "443"
      - "80"
    restart: unless-stopped
    networks:
      - example_net
    volumes:
      - ./nginx/keys:/keys

  example_server:
    container_name: example_server
    image: example_server
    build:
      context: ./backend
      dockerfile: dockerfile
    environment:
      - PORT=3000
    ports:
      - "3000:3000"
    expose:
      - "3000"
    restart: unless-stopped
    networks:
      - example_net

  example_db:
    container_name: example_db
    image: postgres_db
    restart: always
    build:
      context: ./database
      dockerfile: dockerfile
    ports:
      - 127.0.0.1:5432:5432
    expose:
      - "5432"
    networks:
      - example_net
    volumes:
      - example_data:/var/lib/postgresql

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 127.0.0.1:8080:8080
    networks:
      - example_net

  example_frontend:
    container_name: example_frontend
    image: example_frontend
    build:
      context: ./frontend
      target: development
      dockerfile: dockerfile
    environment:
      - PORT=3001
    ports:
      - "3001:3001"
    expose:
      - "3001"
    restart: unless-stopped
    networks:
      - example_net
    volumes:
      - ./frontend/src:/app/src


networks:
  example_net:
    external: true

volumes:
  example_data:
